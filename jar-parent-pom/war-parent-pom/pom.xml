<?xml version="1.0" encoding="UTF-8"?>
<!--
*
* Copyright 2017 Eonian Technologies.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0             
                http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent> 
        <groupId>com.eoniantech.build</groupId>
        <artifactId>jar-parent-pom</artifactId>
        <version>1.4-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>war-parent-pom</artifactId>
    <packaging>pom</packaging>
    <name>Eonian Parent POM: WAR</name>
    <description>Eonian Parent POM.</description>
    <url>https://github.com/eonian-technologies/parent-pom</url>

    <properties>
        <javaeeWebApi.version>8.0</javaeeWebApi.version>
        <itServerId>tomcat9x</itServerId>
        <itServerPort>8080</itServerPort>
        <itServerAjpPort>8009</itServerAjpPort>
        <itServerRmiPort>1099</itServerRmiPort>
        <itServerDumpPort>6300</itServerDumpPort>
        <itServerContext>/${project.artifactId}</itServerContext>
        <appJvmArgs></appJvmArgs>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- JavaEE Web API -->
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-web-api</artifactId>
                <version>${javaeeWebApi.version}</version> 
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- WAR Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <packagingExcludes>META-INF/context.xml</packagingExcludes> 
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement> 
    </build>

    <profiles>
        <!-- Run integration tests against Tomcat with code coverage -->
        <profile>
            <id>integration-test</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test</exists>
                </file> 
            </activation>
            <properties>
                <itServerHome>${project.build.directory}/${itServerId}</itServerHome>
            </properties>
            <build>
                <pluginManagement> 
                    <plugins>

                        <!-- Code coverage -->
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <executions>

                                <!-- Before running integration tests -->
                                <execution>
                                    <id>preIT</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${skipIntegrationTests}</skip>
                                        <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                        <propertyName>argLine</propertyName>
                                    </configuration>
                                </execution>

                                <!-- After integration tests -->
                                <execution>
                                    <id>postIT</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>dump</goal>
                                        <goal>report-integration</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${skipIntegrationTests}</skip>
                                        <port>${itServerDumpPort}</port>
                                        <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin> 

                        <!-- Tomcat -->
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven2-plugin</artifactId>
                            <version>1.6.2</version>
                            <configuration>
                                <container>
                                    <containerId>${itServerId}</containerId>
                                    <output>${itServerHome}/logs/catalina.out</output> 
                                </container>
                                <configuration>
                                    <type>standalone</type>
                                    <home>${itServerHome}</home>
                                    <properties> 
                                        <cargo.servlet.port>${itServerPort}</cargo.servlet.port>
                                        <cargo.tomcat.ajp.port>${itServerAjpPort}</cargo.tomcat.ajp.port>
                                        <cargo.rmi.port>${itServerRmiPort}</cargo.rmi.port>
                                        <cargo.start.jvmargs>
                                            ${argLine},output=tcpserver,port=${itServerDumpPort}
                                            ${appJvmArgs} ${jvmArgs}
                                        </cargo.start.jvmargs>
                                    </properties>
                                </configuration>
                                <deployables>
                                    <deployable>
                                        <properties>
                                            <context>${itServerContext}</context>
                                        </properties>
                                    </deployable>
                                </deployables>
                            </configuration>
                            <executions>

                                <!-- Before integration tests -->
                                <execution>
                                    <id>preIT</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>start</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${skipIntegrationTests}</skip>
                                    </configuration>
                                </execution>

                                <!-- After integration tests -->
                                <execution>
                                    <id>postIT</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>stop</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${skipIntegrationTests}</skip>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin> 
                    </plugins>
                </pluginManagement>

                <!-- Use in lifecycle -->
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
